<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <link rel="icon" href="/images/icon.png">
    <style>
        html, body {
            height: 100%;
            margin: 0;
            background-color: #000; /* Consistent dark theme */
            color: #fff; /* White text for dark theme */
            font-family: Arial, sans-serif;
        }

        body {
            display: flex;
            flex-direction: column;
        }

        .content {
            flex: 1;
            padding-bottom: 40px; /* Space for footer */
        }

        .navbar-custom {
            background-color: #000;
            padding: 10px 0;
        }

        .navbar-custom .navbar-brand,
        .navbar-custom .nav-link {
            color: #fff;
        }

        .navbar-custom .nav-link:hover {
            color: #d4edda; /* Light green hover for consistency */
        }

        .navbar-toggler {
            border: none;
        }

        .navbar-toggler-icon {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3E%3Cpath stroke='rgba(255, 255, 255, 0.8)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E");
        }

        .cart-item {
            border-bottom: 1px solid #444; /* Darker border for dark theme */
            padding: 15px;
            background-color: #1c1c1c; /* Consistent with index.ejs */
            border-radius: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .cart-item h5 {
            font-size: 1.2rem;
            margin: 0;
            color: #fff;
        }

        .cart-item p {
            margin: 5px 0;
            color: #ccc;
        }

        .cart-item .btn {
            font-size: 0.9rem;
        }

        .total {
            font-size: 1.5rem;
            font-weight: bold;
            color: #035925; /* Green for total */
            margin-top: 20px;
        }

        .btn-custom {
            background-color: #000;
            color: #fff;
            border: none;
            padding: 8px 15px;
        }

        .btn-custom:hover {
            background-color: #333;
            color: #d4edda;
        }

        .btn-checkout {
            background-color: #035925;
            color: #fff;
            border: none;
            padding: 10px 20px;
        }

        .btn-checkout:hover {
            background-color: #028a1b;
        }

        .btn-explore {
            background-color: #000;
            color: #fff;
            border: none;
            padding: 10px 20px;
        }

        .btn-explore:hover {
            background-color: #333;
            color: #d4edda;
        }

        .footer {
            background-color: #000;
            color: #fff;
            padding: 10px 0;
            text-align: center;
            position: relative;
            width: 100%;
        }

        .modal-content {
            border-radius: 8px;
            background-color: #1c1c1c; /* Dark theme for modal */
            color: #fff;
        }

        .modal-header, .modal-footer {
            border-color: #444;
        }

        .modal-body .form-control {
            background-color: #333;
            color: #fff;
            border: 1px solid #444;
        }

        .modal-body .form-control:focus {
            background-color: #444;
            border-color: #035925;
            color: #fff;
        }

        .modal-footer .btn {
            border-radius: 5px;
        }

        .close {
            color: #fff;
            opacity: 0.8;
        }

        .close:hover {
            opacity: 1;
        }

        @media (max-width: 768px) {
            .cart-item {
                flex-direction: column;
                text-align: center;
            }

            .cart-item div {
                margin-bottom: 10px;
            }

            .total {
                font-size: 1.2rem;
            }
        }
    </style>
</head>
<body>
    <!-- Navigation Bar -->
    <nav class="navbar navbar-expand-lg navbar-custom mb-4">
        <a class="navbar-brand" href="/">
            <img src="/images/Cloud.png" alt="Logo" style="height: 50px; width: 250px;">
        </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
            aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/home"><i class="fas fa-home"></i> Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/products"><i class="fas fa-shopping-bag"></i> Products</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/auth/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
                </li>
            </ul>
        </div>
    </nav>

    <div class="content container mt-5">
        <h1 class="mb-4">Shopping Cart</h1>

        <!-- Cart Items -->
        <div class="cart-items">
            <% if (cart && cart.length > 0) { %>
                <% cart.forEach(function(item) { %>
                    <div class="cart-item">
                        <div>
                            <h5><%= item.productId.name %></h5>
                            <p>Price: KES <%= item.productId.price.toFixed(2) %></p>
                            <p>Quantity: <%= item.quantity %></p>
                        </div>
                        <div>
                            <button class="btn btn-custom" onclick="removeItem('<%= item._id %>')">
                                <i class="fas fa-trash-alt"></i> Remove
                            </button>
                        </div>
                    </div>
                <% }); %>
                <p class="total">Total: KES <%= total.toFixed(2) %></p>
                <div class="row mb-4">
                    <div class="col-md-12 text-right">
                        <button class="btn btn-checkout" data-toggle="modal" data-target="#checkoutModal">
                            <i class="fas fa-credit-card"></i> Proceed to Checkout
                        </button>
                    </div>
                </div>
            <% } else { %>
                <p>Your cart is empty.</p>
                <div class="text-center mt-4">
                    <a href="/products" class="btn btn-explore"><i class="fas fa-search"></i> Explore Products</a>
                </div>
            <% } %>
        </div>
    </div>

    <!-- Footer -->
    <footer class="footer">
        <p>Â© 2025 Cloud 420. All rights reserved.</p>
    </footer>

    <!-- Checkout Modal -->
    <div class="modal fade" id="checkoutModal" tabindex="-1" role="dialog" aria-labelledby="checkoutModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="checkoutModalLabel"><i class="fas fa-check-circle"></i> Checkout</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="checkoutForm" method="POST" action="/checkout">
                        <div class="form-group">
                            <label for="customerName">Name</label>
                            <input type="text" class="form-control" id="customerName" name="customerName" placeholder="Your Name" required>
                        </div>
                        <div class="form-group">
                            <label for="customerEmail">Email</label>
                            <input type="email" class="form-control" id="customerEmail" name="customerEmail" placeholder="Your Email" required>
                        </div>
                        <div class="form-group">
                            <label for="customerPhone">Phone Number</label>
                            <input type="tel" class="form-control" id="customerPhone" name="customerPhone" placeholder="Your Phone Number" required>
                        </div>
                        <div class="form-group">
                            <label for="customerLocation">Location</label>
                            <input type="text" class="form-control" id="customerLocation" name="customerLocation" placeholder="Your Apartment name and location" required>
                        </div>
                        <div class="form-group">
                            <label for="cartTotal">Cart Total</label>
                            <input type="number" class="form-control" id="cartTotal" name="cartTotal" value="<%= total.toFixed(2) %>" readonly>
                        </div>
                        <div id="umsPayContainer"></div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">
                        <i class="fas fa-times"></i> Cancel
                    </button>
                    <button type="button" class="btn btn-checkout" id="confirmCheckout">
                        <i class="fas fa-check"></i> Confirm Checkout
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        function removeItem(itemId) {
            fetch(`/cart/remove/${itemId}`, {
                method: 'DELETE'
            })
            .then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    toastr.error('Failed to remove item. Please try again.');
                }
            })
            .catch(error => {
                toastr.error('An error occurred. Please try again.');
            });
        }

        document.addEventListener('DOMContentLoaded', function () {
            const confirmCheckoutBtn = document.getElementById('confirmCheckout');
            const checkoutForm = document.getElementById('checkoutForm');

            confirmCheckoutBtn.addEventListener('click', async function () {
                const formData = new FormData(checkoutForm);
                const data = {};
                formData.forEach((value, key) => data[key] = value);

                // Client-side validation
                if (!data.customerName || !data.customerEmail || !data.customerPhone || !data.customerLocation || !data.cartTotal) {
                    toastr.error('Please fill out all required fields.');
                    return;
                }

                // Change button to "Processing"
                confirmCheckoutBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing';
                confirmCheckoutBtn.disabled = true;

                try {
                    const response = await fetch('/checkout', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    });

                    const result = await response.json();
                    if (result.success) {
                        window.location.href = result.paymentUrl;
                    } else {
                        toastr.error(result.message || 'An error occurred. Please try again.');
                        confirmCheckoutBtn.innerHTML = '<i class="fas fa-check"></i> Confirm Checkout';
                        confirmCheckoutBtn.disabled = false;
                    }
                } catch (error) {
                    console.error('Error during checkout:', error);
                    toastr.error('An error occurred. Please try again later.');
                    confirmCheckoutBtn.innerHTML = '<i class="fas fa-check"></i> Confirm Checkout';
                    confirmCheckoutBtn.disabled = false;
                }
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
    console.log("Global Cart Count Script Loaded");

    // Update cart count immediately on page load
    updateCartCount();

    // Periodic update every 30 seconds
    setInterval(() => updateCartCount(), 30000);

    // Listen for cart updates from other pages
    window.addEventListener('storage', (event) => {
        if (event.key === 'cartCount') {
            updateCartBadge(parseInt(event.newValue, 10));
        }
    });

    // Function to update cart count from server
    async function updateCartCount(forceUpdate = false) {
        try {
            const response = await fetch('/cart-count');
            if (!response.ok) throw new Error(`Server error: ${response.status}`);

            const data = await response.json();
            const newCount = data.cartCount || 0;
            const currentCount = parseInt(localStorage.getItem('cartCount') || '0', 10);

            // Update only if count has changed or force update is triggered
            if (newCount !== currentCount || forceUpdate) {
                localStorage.setItem('cartCount', newCount);
                updateCartBadge(newCount);
                
                // ð¥ Broadcast update to all tabs/pages
                window.dispatchEvent(new StorageEvent('storage', { key: 'cartCount', newValue: String(newCount) }));
            }
        } catch (error) {
            console.error('Error updating cart count:', error);
        }
    }

    // Function to update cart badge
    function updateCartBadge(count) {
        const cartCountEl = document.getElementById('cart-count');
        const cartLink = document.querySelector('a[href="/cart"]');

        if (count > 0) {
            if (!cartCountEl) {
                cartLink.insertAdjacentHTML('beforeend', 
                    `<span class="badge bg-success" id="cart-count">${count}</span>`);
            } else {
                cartCountEl.textContent = count;
            }
        } else if (cartCountEl) {
            cartCountEl.remove();
        }
    }
});

    </script>
</body>
</html>